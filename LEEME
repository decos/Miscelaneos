COMPONENTES, DIRECTIVAS DE ATRIBUTOS, CICLO DE VIDA Y MÁS

	CREANDO EL PROYECTO DE ESTA SECCIÓN - MISCELÁNEOS
	
		RECURSOS: 
		- FONT-AWESOME: Libreria de ICONOS
			http://fontawesome.io/

		- Suponiendo que la libreria no tiene un metodo de instalación mediante npm,
		
		- Descargamos lo siguiente:
			BOOTSTRAP (4.0)
			https://getbootstrap.com/docs/4.0/getting-started/download/

			JQUERY (Compressed, production 3.2.1 slim build)
			https://jquery.com/download/
		
			TETHER (1.3.3, libreria que usa bootstrap)
			http://tether.io/

		- Creamos en el directorio src/assets los siguientes directorios:
			BOOTSTRAP4: 
				- CSS: bootstrap.min.css, bootstrap.min.css.map
				- JS: bootstrap.min.js 
			TETHER: tether/dist/js/tether.min.js
			JQUERY: el archivo por defecto	


		1. Configurar el archivo ".angular-cli.json"
			- Agregar en styles:
				"assets/b4/css/bootstrap.min.css"
			- Agregar en scripts:
				"assets/jquery/jquery.slim.min.js",
				"assets/tether/tether.min.js",
				"assets/b4/js/bootstrap.min.js"


		2. Reiniciar el servidor

		3. Copiar la carpeta completa de font-awesome en "assets" y dejarlo con el 
			siguiente nombre: font-awesome y agregar la ruta en "styles"

			- Agregar en styles:
				"assets/font-awesome/css/font-awesome.css"

		4. Modificar la siguiente vista para mostrar un icono de font-awesome
			src/app/app.component.html
			

		ERROR: Propper.js
		SOLVED: Instalar todos los ficheros del Bootstrap CDN
			https://v4-alpha.getbootstrap.com/


	ngStyle Y SU USO CON DIRECTIVAS DE ATRIBUTOS
		
		- NgStyle = Es una directiva que permite aplicar estilos en el html en caliente
		- Tres formas de aplicarlo:
			1. Usando un objeto literal
				<some-element [ngStyle]="{'font-style': styleExp}">...</some-element>
			2. Mandando una expresión (con un punto)
				<some-element [ngStyle]="{'max-width.px': widthExp}">...</some-element>
			3. Recibiendo un objeto completo			
				<some-element [ngStyle]="objExp">...</some-element>

		
		1. Crear el estilo .main-container
			src/styles.css

		2. Crear el directorio components dentro de "app"

		3. Crear el componente "ngStyle" 
			ng g c components/ngStyle -it -is
			-it = inline template (en el mismo archivo)
			-is = inline style (en el mismo archivo)

		- Eliminar el siguiente archivo: ng-style.component.spec.ts

		4. Codear el componente "ngSTyle"
			src/app/components/ng-style/ng-style.component.ts
		
			Una manera:
				<p [ngStyle]="{ 'font-size' : tamano + 'px', 'color' : 'red' }">
			
			Otra manera:
				<p [style.fontSize]=" '40px' ">
				<p [style.fontSize.px]=" tamano ">
			


			
